/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type { Blog, BlogInterface } from '../../contracts/Blog'

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: '_name',
        type: 'string'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'listNumber',
        type: 'uint256'
      }
    ],
    name: 'Added',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32'
      }
    ],
    name: 'RoleAdminChanged',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address'
      }
    ],
    name: 'RoleGranted',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address'
      }
    ],
    name: 'RoleRevoked',
    type: 'event'
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address'
      }
    ],
    name: 'addOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'getList',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'url',
            type: 'string'
          },
          {
            internalType: 'address',
            name: 'author',
            type: 'address'
          },
          {
            internalType: 'uint256',
            name: 'published',
            type: 'uint256'
          }
        ],
        internalType: 'struct Post[]',
        name: '',
        type: 'tuple[]'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'getListLength',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'offset',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256'
      }
    ],
    name: 'getListPaged',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'url',
            type: 'string'
          },
          {
            internalType: 'address',
            name: 'author',
            type: 'address'
          },
          {
            internalType: 'uint256',
            name: 'published',
            type: 'uint256'
          }
        ],
        internalType: 'struct Post[]',
        name: '',
        type: 'tuple[]'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'getOwners',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'idx',
        type: 'uint256'
      }
    ],
    name: 'getPost',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'url',
            type: 'string'
          },
          {
            internalType: 'address',
            name: 'author',
            type: 'address'
          },
          {
            internalType: 'uint256',
            name: 'published',
            type: 'uint256'
          }
        ],
        internalType: 'struct Post',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      }
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256'
      }
    ],
    name: 'getRoleMember',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      }
    ],
    name: 'getRoleMemberCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address'
      }
    ],
    name: 'isOwner',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'publicKey',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'url',
        type: 'string'
      }
    ],
    name: 'publish',
    outputs: [
      {
        internalType: 'uint256',
        name: 'listNumber',
        type: 'uint256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address'
      }
    ],
    name: 'removeOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'renounceOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4'
      }
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address'
      }
    ],
    name: 'swapOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'version',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  }
] as const

const _bytecode =
  '0x60c060405260056080818152640312e302e360dc1b60a05262000023908262000271565b503480156200003157600080fd5b5060405162001f8138038062001f8183398101604081905262000054916200033d565b600462000062828262000271565b506200007060003362000077565b5062000412565b6200008e8282620000ba60201b62000c961760201c565b6000828152600160209081526040909120620000b591839062000d866200015b821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000157576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001163390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600062000172836001600160a01b0384166200017b565b90505b92915050565b6000818152600183016020526040812054620001c45750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000175565b50600062000175565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001f857607f821691505b6020821081036200021957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000b557600081815260208120601f850160051c81016020861015620002485750805b601f850160051c820191505b81811015620002695782815560010162000254565b505050505050565b81516001600160401b038111156200028d576200028d620001cd565b620002a5816200029e8454620001e3565b846200021f565b602080601f831160018114620002dd5760008415620002c45750858301515b600019600386901b1c1916600185901b17855562000269565b600085815260208120601f198616915b828110156200030e57888601518255948401946001909101908401620002ed565b50858210156200032d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083850312156200035157600080fd5b82516001600160401b03808211156200036957600080fd5b818501915085601f8301126200037e57600080fd5b815181811115620003935762000393620001cd565b604051601f8201601f19908116603f01168101908382118183101715620003be57620003be620001cd565b816040528281528886848701011115620003d757600080fd5b600093505b82841015620003fb5784840186015181850187015292850192620003dc565b600086848301015280965050505050505092915050565b611b5f80620004226000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c806363ffab31116100e3578063a0e67e2b1161008c578063b65c531b11610066578063b65c531b14610380578063ca15c87314610388578063d547741f1461039b57600080fd5b8063a0e67e2b14610350578063a217fddf14610365578063a65310521461036d57600080fd5b806390a79368116100bd57806390a79368146102e457806391d14854146102f7578063942b765a1461033b57600080fd5b806363ffab31146102915780637065cb48146102995780639010d07c146102ac57600080fd5b806328c23a451161014557806336568abe1161011f57806336568abe1461025657806340731c241461026957806354fd4d501461028957600080fd5b806328c23a45146102285780632f2ff15d146102305780632f54bf6e1461024357600080fd5b8063173825d911610176578063173825d9146101cf578063243e280b146101e4578063248a9ca31461020557600080fd5b806301ffc9a71461019257806306fdde03146101ba575b600080fd5b6101a56101a0366004611418565b6103ae565b60405190151581526020015b60405180910390f35b6101c261040a565b6040516101b191906114c8565b6101e26101dd366004611504565b610498565b005b6101f76101f236600461154e565b6104b2565b6040519081526020016101b1565b6101f761021336600461161d565b60009081526020819052604090206001015490565b6101e26105f2565b6101e261023e366004611636565b61060b565b6101a5610251366004611504565b610635565b6101e2610264366004611636565b610682565b61027c61027736600461161d565b610736565b6040516101b191906116ad565b6101c261085f565b6101c261086c565b6101e26102a7366004611504565b610879565b6102bf6102ba3660046116c0565b61088f565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b1565b6101e26102f2366004611504565b6108ae565b6101a5610305366004611636565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b6103436108cf565b6040516101b191906116e2565b6103586109f0565b6040516101b19190611762565b6101f7600081565b61034361037b3660046116c0565b610aac565b6002546101f7565b6101f761039636600461161d565b610c5a565b6101e26103a9366004611636565b610c71565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f5a05180f000000000000000000000000000000000000000000000000000000001480610404575061040482610da8565b92915050565b60048054610417906117bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610443906117bc565b80156104905780601f1061046557610100808354040283529160200191610490565b820191906000526020600020905b81548152906001019060200180831161047357829003601f168201915b505050505081565b60006104a381610e3f565b6104ae600083610c71565b5050565b6000806104be81610e3f565b600060405180606001604052808581526020016104d83390565b73ffffffffffffffffffffffffffffffffffffffff16815242602090910152600280546001810182556000919091528151919250829160039091027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace019081906105429082611857565b506020820151600182810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90931692909217909155604090920151600291820155547f64a55044d1f2eddebe1b90e8e2853e8e96931cefadbfa0b2ceb34bee36061941916105c8916119a0565b60405190815260200160405180910390a16002546105e8906001906119a0565b9250505b50919050565b60006105fd81610e3f565b610608600033610682565b50565b60008281526020819052604090206001015461062681610e3f565b6106308383610e49565b505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205460ff16610404565b73ffffffffffffffffffffffffffffffffffffffff8116331461072c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b6104ae8282610e6b565b610770604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b60028281548110610783576107836119b3565b90600052602060002090600302016040518060600160405290816000820180546107ac906117bc565b80601f01602080910402602001604051908101604052809291908181526020018280546107d8906117bc565b80156108255780601f106107fa57610100808354040283529160200191610825565b820191906000526020600020905b81548152906001019060200180831161080857829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff16602082015260029091015460409091015292915050565b60058054610417906117bc565b60038054610417906117bc565b600061088481610e3f565b6104ae60008361060b565b60008281526001602052604081206108a79083610e8d565b9392505050565b60006108b981610e3f565b6108c460008361060b565b6104ae600033610682565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156109e75783829060005260206000209060030201604051806060016040529081600082018054610926906117bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610952906117bc565b801561099f5780601f106109745761010080835404028352916020019161099f565b820191906000526020600020905b81548152906001019060200180831161098257829003601f168201915b505050918352505060018281015473ffffffffffffffffffffffffffffffffffffffff16602080840191909152600290930154604090920191909152918352920191016108f3565b50505050905090565b606060006109fd81610c5a565b905060008167ffffffffffffffff811115610a1a57610a1a61151f565b604051908082528060200260200182016040528015610a43578160200160208202803683370190505b50905060005b82811015610aa557610a5c60008261088f565b828281518110610a6e57610a6e6119b3565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280610a9d816119e2565b915050610a49565b5092915050565b606060025460008415610ac957610ac4856001611a1a565b610acb565b845b905081811180610ad9575083155b15610b4b576040805160008082526020820190925290610b41565b610b2e604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b815260200190600190039081610af45790505b5092505050610404565b6000610b60610b5a83856119a0565b86610e99565b905060008167ffffffffffffffff811115610b7d57610b7d61151f565b604051908082528060200260200182016040528015610be857816020015b610bd5604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b815260200190600190039081610b9b5790505b50905060005b82811015610c4f576000610c028286611a1a565b9050828181518110610c1657610c166119b3565b6020026020010151838381518110610c3057610c306119b3565b6020026020010181905250508080610c47906119e2565b915050610bee565b509695505050505050565b600081815260016020526040812061040490610eaf565b600082815260208190526040902060010154610c8c81610e3f565b6106308383610e6b565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166104ae5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055610d283390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006108a78373ffffffffffffffffffffffffffffffffffffffff8416610eb9565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061040457507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610404565b6106088133610f08565b610e538282610c96565b60008281526001602052604090206106309082610d86565b610e758282610fc0565b60008281526001602052604090206106309082611077565b60006108a78383611099565b6000818310610ea857816108a7565b5090919050565b6000610404825490565b6000818152600183016020526040812054610f0057508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610404565b506000610404565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166104ae57610f46816110c3565b610f518360206110e2565b604051602001610f62929190611a2d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a0000000000000000000000000000000000000000000000000000000008252610723916004016114c8565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16156104ae5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006108a78373ffffffffffffffffffffffffffffffffffffffff8416611325565b60008260000182815481106110b0576110b06119b3565b9060005260206000200154905092915050565b606061040473ffffffffffffffffffffffffffffffffffffffff831660145b606060006110f1836002611aae565b6110fc906002611a1a565b67ffffffffffffffff8111156111145761111461151f565b6040519080825280601f01601f19166020018201604052801561113e576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611175576111756119b3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106111d8576111d86119b3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000611214846002611aae565b61121f906001611a1a565b90505b60018111156112bc577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611260576112606119b3565b1a60f81b828281518110611276576112766119b3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936112b581611ac5565b9050611222565b5083156108a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610723565b6000818152600183016020526040812054801561140e5760006113496001836119a0565b855490915060009061135d906001906119a0565b90508181146113c257600086600001828154811061137d5761137d6119b3565b90600052602060002001549050808760000184815481106113a0576113a06119b3565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806113d3576113d3611afa565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610404565b6000915050610404565b60006020828403121561142a57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146108a757600080fd5b60005b8381101561147557818101518382015260200161145d565b50506000910152565b6000815180845261149681602086016020860161145a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006108a7602083018461147e565b803573ffffffffffffffffffffffffffffffffffffffff811681146114ff57600080fd5b919050565b60006020828403121561151657600080fd5b6108a7826114db565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561156057600080fd5b813567ffffffffffffffff8082111561157857600080fd5b818401915084601f83011261158c57600080fd5b81358181111561159e5761159e61151f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156115e4576115e461151f565b816040528281528760208487010111156115fd57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561162f57600080fd5b5035919050565b6000806040838503121561164957600080fd5b82359150611659602084016114db565b90509250929050565b6000815160608452611677606085018261147e565b905073ffffffffffffffffffffffffffffffffffffffff6020840151166020850152604083015160408501528091505092915050565b6020815260006108a76020830184611662565b600080604083850312156116d357600080fd5b50508035926020909101359150565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611755577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611743858351611662565b94509285019290850190600101611709565b5092979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156117b057835173ffffffffffffffffffffffffffffffffffffffff168352928401929184019160010161177e565b50909695505050505050565b600181811c908216806117d057607f821691505b6020821081036105ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b601f82111561063057600081815260208120601f850160051c810160208610156118305750805b601f850160051c820191505b8181101561184f5782815560010161183c565b505050505050565b815167ffffffffffffffff8111156118715761187161151f565b6118858161187f84546117bc565b84611809565b602080601f8311600181146118d857600084156118a25750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855561184f565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561192557888601518255948401946001909101908401611906565b508582101561196157878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561040457610404611971565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a1357611a13611971565b5060010190565b8082018082111561040457610404611971565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611a6581601785016020880161145a565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351611aa281602884016020880161145a565b01602801949350505050565b808202811582820484141761040457610404611971565b600081611ad457611ad4611971565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220d8fc85e8ea3d6d48bc6afcfc9f1fa98eee7b62a7fc80d1291fb0e66c8e7b1c9c64736f6c63430008110033'

type BlogConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: BlogConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class Blog__factory extends ContractFactory {
  constructor(...args: BlogConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Blog> {
    return super.deploy(_name, overrides || {}) as Promise<Blog>
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, overrides || {})
  }
  override attach(address: string): Blog {
    return super.attach(address) as Blog
  }
  override connect(signer: Signer): Blog__factory {
    return super.connect(signer) as Blog__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): BlogInterface {
    return new utils.Interface(_abi) as BlogInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Blog {
    return new Contract(address, _abi, signerOrProvider) as Blog
  }
}
