/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type { Blog, BlogInterface } from '../../contracts/Blog'

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: '_name',
        type: 'string'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'listNumber',
        type: 'uint256'
      }
    ],
    name: 'Added',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32'
      }
    ],
    name: 'RoleAdminChanged',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address'
      }
    ],
    name: 'RoleGranted',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address'
      }
    ],
    name: 'RoleRevoked',
    type: 'event'
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'cid',
            type: 'string'
          },
          {
            internalType: 'string',
            name: 'title',
            type: 'string'
          },
          {
            internalType: 'string[]',
            name: 'tags',
            type: 'string[]'
          }
        ],
        internalType: 'struct InputPost',
        name: '_info',
        type: 'tuple'
      }
    ],
    name: 'add',
    outputs: [
      {
        internalType: 'uint256',
        name: 'listNumber',
        type: 'uint256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address'
      }
    ],
    name: 'addOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'getList',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'cid',
            type: 'string'
          },
          {
            internalType: 'string',
            name: 'title',
            type: 'string'
          },
          {
            internalType: 'string[]',
            name: 'tags',
            type: 'string[]'
          },
          {
            internalType: 'address',
            name: 'author',
            type: 'address'
          },
          {
            internalType: 'uint256',
            name: 'addDate',
            type: 'uint256'
          }
        ],
        internalType: 'struct Post[]',
        name: '',
        type: 'tuple[]'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'getListLength',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'offset',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256'
      }
    ],
    name: 'getListPaged',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'cid',
            type: 'string'
          },
          {
            internalType: 'string',
            name: 'title',
            type: 'string'
          },
          {
            internalType: 'string[]',
            name: 'tags',
            type: 'string[]'
          },
          {
            internalType: 'address',
            name: 'author',
            type: 'address'
          },
          {
            internalType: 'uint256',
            name: 'addDate',
            type: 'uint256'
          }
        ],
        internalType: 'struct Post[]',
        name: '',
        type: 'tuple[]'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'getOwners',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'idx',
        type: 'uint256'
      }
    ],
    name: 'getPost',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'cid',
            type: 'string'
          },
          {
            internalType: 'string',
            name: 'title',
            type: 'string'
          },
          {
            internalType: 'string[]',
            name: 'tags',
            type: 'string[]'
          },
          {
            internalType: 'address',
            name: 'author',
            type: 'address'
          },
          {
            internalType: 'uint256',
            name: 'addDate',
            type: 'uint256'
          }
        ],
        internalType: 'struct Post',
        name: '',
        type: 'tuple'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      }
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256'
      }
    ],
    name: 'getRoleMember',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      }
    ],
    name: 'getRoleMemberCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address'
      }
    ],
    name: 'isOwner',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'publicKey',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address'
      }
    ],
    name: 'removeOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'renounceOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4'
      }
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address'
      }
    ],
    name: 'swapOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'version',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  }
] as const

const _bytecode =
  '0x60c060405260056080818152640312e302e360dc1b60a05262000023908262000271565b503480156200003157600080fd5b50604051620025963803806200259683398101604081905262000054916200033d565b600462000062828262000271565b506200007060003362000077565b5062000412565b6200008e8282620000ba60201b62000fe21760201c565b6000828152600160209081526040909120620000b5918390620010d26200015b821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000157576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001163390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600062000172836001600160a01b0384166200017b565b90505b92915050565b6000818152600183016020526040812054620001c45750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000175565b50600062000175565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001f857607f821691505b6020821081036200021957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620000b557600081815260208120601f850160051c81016020861015620002485750805b601f850160051c820191505b81811015620002695782815560010162000254565b505050505050565b81516001600160401b038111156200028d576200028d620001cd565b620002a5816200029e8454620001e3565b846200021f565b602080601f831160018114620002dd5760008415620002c45750858301515b600019600386901b1c1916600185901b17855562000269565b600085815260208120601f198616915b828110156200030e57888601518255948401946001909101908401620002ed565b50858210156200032d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083850312156200035157600080fd5b82516001600160401b03808211156200036957600080fd5b818501915085601f8301126200037e57600080fd5b815181811115620003935762000393620001cd565b604051601f8201601f19908116603f01168101908382118183101715620003be57620003be620001cd565b816040528281528886848701011115620003d757600080fd5b600093505b82841015620003fb5784840186015181850187015292850192620003dc565b600086848301015280965050505050505092915050565b61217480620004226000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c80637065cb48116100e3578063a217fddf1161008c578063ca15c87311610066578063ca15c87314610375578063d547741f14610388578063daa526cb1461039b57600080fd5b8063a217fddf14610352578063a65310521461035a578063b65c531b1461036d57600080fd5b806391d14854116100bd57806391d14854146102e4578063942b765a14610328578063a0e67e2b1461033d57600080fd5b80637065cb48146102865780639010d07c1461029957806390a79368146102d157600080fd5b80632f2ff15d1161014557806340731c241161011f57806340731c241461025657806354fd4d501461027657806363ffab311461027e57600080fd5b80632f2ff15d1461021d5780632f54bf6e1461023057806336568abe1461024357600080fd5b8063173825d911610176578063173825d9146101cf578063248a9ca3146101e457806328c23a451461021557600080fd5b806301ffc9a71461019257806306fdde03146101ba575b600080fd5b6101a56101a0366004611821565b6103ae565b60405190151581526020015b60405180910390f35b6101c261040a565b6040516101b191906118d1565b6101e26101dd36600461190d565b610498565b005b6102076101f2366004611928565b60009081526020819052604090206001015490565b6040519081526020016101b1565b6101e26104b2565b6101e261022b366004611941565b6104cb565b6101a561023e36600461190d565b6104f5565b6101e2610251366004611941565b610542565b610269610264366004611928565b6105f6565b6040516101b19190611a55565b6101c2610898565b6101c26108a5565b6101e261029436600461190d565b6108b2565b6102ac6102a7366004611a68565b6108c8565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b1565b6101e26102df36600461190d565b6108e7565b6101a56102f2366004611941565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b610330610908565b6040516101b19190611a8a565b610345610b94565b6040516101b19190611b0a565b610207600081565b610330610368366004611a68565b610c50565b600254610207565b610207610383366004611928565b610e1a565b6101e2610396366004611941565b610e31565b6102076103a9366004611c99565b610e56565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f5a05180f0000000000000000000000000000000000000000000000000000000014806104045750610404826110f4565b92915050565b6004805461041790611dd1565b80601f016020809104026020016040519081016040528092919081815260200182805461044390611dd1565b80156104905780601f1061046557610100808354040283529160200191610490565b820191906000526020600020905b81548152906001019060200180831161047357829003601f168201915b505050505081565b60006104a38161118b565b6104ae600083610e31565b5050565b60006104bd8161118b565b6104c8600033610542565b50565b6000828152602081905260409020600101546104e68161118b565b6104f08383611195565b505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205460ff16610404565b73ffffffffffffffffffffffffffffffffffffffff811633146105ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084015b60405180910390fd5b6104ae82826111b7565b61063e6040518060a00160405280606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6002828154811061065157610651611e1e565b90600052602060002090600502016040518060a001604052908160008201805461067a90611dd1565b80601f01602080910402602001604051908101604052809291908181526020018280546106a690611dd1565b80156106f35780601f106106c8576101008083540402835291602001916106f3565b820191906000526020600020905b8154815290600101906020018083116106d657829003601f168201915b5050505050815260200160018201805461070c90611dd1565b80601f016020809104026020016040519081016040528092919081815260200182805461073890611dd1565b80156107855780601f1061075a57610100808354040283529160200191610785565b820191906000526020600020905b81548152906001019060200180831161076857829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561085f5783829060005260206000200180546107d290611dd1565b80601f01602080910402602001604051908101604052809291908181526020018280546107fe90611dd1565b801561084b5780601f106108205761010080835404028352916020019161084b565b820191906000526020600020905b81548152906001019060200180831161082e57829003601f168201915b5050505050815260200190600101906107b3565b50505090825250600382015473ffffffffffffffffffffffffffffffffffffffff16602082015260049091015460409091015292915050565b6005805461041790611dd1565b6003805461041790611dd1565b60006108bd8161118b565b6104ae6000836104cb565b60008281526001602052604081206108e090836111d9565b9392505050565b60006108f28161118b565b6108fd6000836104cb565b6104ae600033610542565b60606002805480602002602001604051908101604052809291908181526020016000905b82821015610b8b57838290600052602060002090600502016040518060a001604052908160008201805461095f90611dd1565b80601f016020809104026020016040519081016040528092919081815260200182805461098b90611dd1565b80156109d85780601f106109ad576101008083540402835291602001916109d8565b820191906000526020600020905b8154815290600101906020018083116109bb57829003601f168201915b505050505081526020016001820180546109f190611dd1565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1d90611dd1565b8015610a6a5780601f10610a3f57610100808354040283529160200191610a6a565b820191906000526020600020905b815481529060010190602001808311610a4d57829003601f168201915b5050505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610b44578382906000526020600020018054610ab790611dd1565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae390611dd1565b8015610b305780601f10610b0557610100808354040283529160200191610b30565b820191906000526020600020905b815481529060010190602001808311610b1357829003601f168201915b505050505081526020019060010190610a98565b50505090825250600382015473ffffffffffffffffffffffffffffffffffffffff16602080830191909152600490920154604090910152908252600192909201910161092c565b50505050905090565b60606000610ba181610e1a565b905060008167ffffffffffffffff811115610bbe57610bbe611b64565b604051908082528060200260200182016040528015610be7578160200160208202803683370190505b50905060005b82811015610c4957610c006000826108c8565b828281518110610c1257610c12611e1e565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280610c4181611e7c565b915050610bed565b5092915050565b606060025460008415610c6d57610c68856001611eb4565b610c6f565b845b905081811180610c7d575083155b15610cfd576040805160008082526020820190925290610cf3565b610ce06040518060a00160405280606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b815260200190600190039081610c985790505b5092505050610404565b6000610d12610d0c8385611ec7565b866111e5565b905060008167ffffffffffffffff811115610d2f57610d2f611b64565b604051908082528060200260200182016040528015610da857816020015b610d956040518060a00160405280606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b815260200190600190039081610d4d5790505b50905060005b82811015610e0f576000610dc28286611eb4565b9050828181518110610dd657610dd6611e1e565b6020026020010151838381518110610df057610df0611e1e565b6020026020010181905250508080610e0790611e7c565b915050610dae565b509695505050505050565b6000818152600160205260408120610404906111fb565b600082815260208190526040902060010154610e4c8161118b565b6104f083836111b7565b600080610e628161118b565b60006040518060a00160405280856000015181526020018560200151815260200185604001518152602001610e943390565b73ffffffffffffffffffffffffffffffffffffffff16815242602090910152600280546001810182556000919091528151919250829160059091027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01908190610efe9082611f28565b5060208201516001820190610f139082611f28565b5060408201518051610f2f916002840191602090910190611764565b5060608201516003820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790556080909101516004909101556002547f64a55044d1f2eddebe1b90e8e2853e8e96931cefadbfa0b2ceb34bee3606194190610fb890600190611ec7565b60405190815260200160405180910390a1600254610fd890600190611ec7565b9250505b50919050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166104ae5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556110743390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006108e08373ffffffffffffffffffffffffffffffffffffffff8416611205565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061040457507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610404565b6104c88133611254565b61119f8282610fe2565b60008281526001602052604090206104f090826110d2565b6111c1828261130c565b60008281526001602052604090206104f090826113c3565b60006108e083836113e5565b60008183106111f457816108e0565b5090919050565b6000610404825490565b600081815260018301602052604081205461124c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610404565b506000610404565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166104ae576112928161140f565b61129d83602061142e565b6040516020016112ae929190612042565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526105e3916004016118d1565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16156104ae5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006108e08373ffffffffffffffffffffffffffffffffffffffff8416611671565b60008260000182815481106113fc576113fc611e1e565b9060005260206000200154905092915050565b606061040473ffffffffffffffffffffffffffffffffffffffff831660145b6060600061143d8360026120c3565b611448906002611eb4565b67ffffffffffffffff81111561146057611460611b64565b6040519080825280601f01601f19166020018201604052801561148a576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106114c1576114c1611e1e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061152457611524611e1e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006115608460026120c3565b61156b906001611eb4565b90505b6001811115611608577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106115ac576115ac611e1e565b1a60f81b8282815181106115c2576115c2611e1e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93611601816120da565b905061156e565b5083156108e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016105e3565b6000818152600183016020526040812054801561175a576000611695600183611ec7565b85549091506000906116a990600190611ec7565b905081811461170e5760008660000182815481106116c9576116c9611e1e565b90600052602060002001549050808760000184815481106116ec576116ec611e1e565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061171f5761171f61210f565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610404565b6000915050610404565b8280548282559060005260206000209081019282156117aa579160200282015b828111156117aa578251829061179a9082611f28565b5091602001919060010190611784565b506117b69291506117ba565b5090565b808211156117b65760006117ce82826117d7565b506001016117ba565b5080546117e390611dd1565b6000825580601f106117f3575050565b601f0160209004906000526020600020908101906104c891905b808211156117b6576000815560010161180d565b60006020828403121561183357600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146108e057600080fd5b60005b8381101561187e578181015183820152602001611866565b50506000910152565b6000815180845261189f816020860160208601611863565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006108e06020830184611887565b803573ffffffffffffffffffffffffffffffffffffffff8116811461190857600080fd5b919050565b60006020828403121561191f57600080fd5b6108e0826118e4565b60006020828403121561193a57600080fd5b5035919050565b6000806040838503121561195457600080fd5b82359150611964602084016118e4565b90509250929050565b6000815160a0845261198260a0850182611887565b90506020808401518583038287015261199b8382611887565b925050604084015185830360408701528281518085528385019150838160051b860101848401935060005b82811015611a12577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0878303018452611a00828651611887565b948601949386019391506001016119c6565b5060608801519550611a3c60608a018773ffffffffffffffffffffffffffffffffffffffff169052565b608088015160808a015280965050505050505092915050565b6020815260006108e0602083018461196d565b60008060408385031215611a7b57600080fd5b50508035926020909101359150565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611afd577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611aeb85835161196d565b94509285019290850190600101611ab1565b5092979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611b5857835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101611b26565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611bb657611bb6611b64565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611c0357611c03611b64565b604052919050565b600082601f830112611c1c57600080fd5b813567ffffffffffffffff811115611c3657611c36611b64565b611c6760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611bbc565b818152846020838601011115611c7c57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020808385031215611cac57600080fd5b823567ffffffffffffffff80821115611cc457600080fd5b9084019060608287031215611cd857600080fd5b611ce0611b93565b823582811115611cef57600080fd5b611cfb88828601611c0b565b8252508383013582811115611d0f57600080fd5b611d1b88828601611c0b565b8583015250604083013582811115611d3257600080fd5b80840193505086601f840112611d4757600080fd5b823582811115611d5957611d59611b64565b8060051b611d68868201611bbc565b918252848101860191868101908a841115611d8257600080fd5b87870192505b83831015611dbe57823586811115611da05760008081fd5b611dae8c8a838b0101611c0b565b8352509187019190870190611d88565b6040850152509198975050505050505050565b600181811c90821680611de557607f821691505b602082108103610fdc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ead57611ead611e4d565b5060010190565b8082018082111561040457610404611e4d565b8181038181111561040457610404611e4d565b601f8211156104f057600081815260208120601f850160051c81016020861015611f015750805b601f850160051c820191505b81811015611f2057828155600101611f0d565b505050505050565b815167ffffffffffffffff811115611f4257611f42611b64565b611f5681611f508454611dd1565b84611eda565b602080601f831160018114611fa95760008415611f735750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555611f20565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015611ff657888601518255948401946001909101908401611fd7565b508582101561203257878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161207a816017850160208801611863565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516120b7816028840160208801611863565b01602801949350505050565b808202811582820484141761040457610404611e4d565b6000816120e9576120e9611e4d565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220e75842b0a6a360d396e89efe6848f00409dab080e0c18c63105bf7ed23b3b72764736f6c63430008110033'

type BlogConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: BlogConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class Blog__factory extends ContractFactory {
  constructor(...args: BlogConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Blog> {
    return super.deploy(_name, overrides || {}) as Promise<Blog>
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, overrides || {})
  }
  override attach(address: string): Blog {
    return super.attach(address) as Blog
  }
  override connect(signer: Signer): Blog__factory {
    return super.connect(signer) as Blog__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): BlogInterface {
    return new utils.Interface(_abi) as BlogInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Blog {
    return new Contract(address, _abi, signerOrProvider) as Blog
  }
}
